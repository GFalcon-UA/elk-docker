input {
  beats {
    port => 5044
    ssl => false
#    ssl_certificate => "/etc/pki/tls/certs/logstash-beats.crt"
#    ssl_key => "/etc/pki/tls/private/logstash-beats.key"
  }
}
filter {
    grok {
        match => { "message" => "%{COMBINEDAPACHELOG}"}
    }
    geoip {
        source => "clientip"
    }
    mutate {
		gsub => [
			"referrer", "\"", "",
			"agent", "\"", ""
		]
	}
	# One day we might need https://stackoverflow.com/questions/18330541/how-to-handle-multiple-heterogeneous-inputs-with-logstash
	mutate {
		rename => { "clientip" => "remoteHost" }    	
		rename => { "agent" => "userAgent" }    	
		rename => { "request" => "uri" }    	
		rename => { "response" => "httpResponseCode" }    	
		rename => { "verb" => "httpMethod" }    	
		rename => { "bytes" => "bytesSent" }    	
		rename => { "[fields][appName]" => "appName" }
		rename => { "[fields][env]" => "serverEnv" }
		remove_field => [ "auth", "ident", "offset", "prospector.type" ]
    }
    mutate {
    	remove_field => [ "fields" ]
		convert => [ "[geoip][coordinates]", "float"]
		convert => [ "bytesSent", "integer"]
		convert => [ "httpResponseCode", "integer"]
    }
}